#!/system/bin/sh
#set -e
#set -x


SSID=mnet                           # set this to your desired string (avoid spaces and non-ascii characters)
WIFI=wlan0                # set this according to your device (lshw | grep -A10 Wireless | grep 'logical name')
SUBNET=10.0.0                   # must be different than WIFI
PASSPHRASE=foobarfoo
AP=mnet
IP=${SUBNET}.1
DIR=/data/vendor/wifi

USAGE()
{
    	echo 'options'
    	printf '\t%s\n' "$(basename "$0"): up | down | arp | log"
    	exit
}

DOWN()
{
    # hope there are no other instances of same daemons
    pkill hostapd
    kill  "$(pidof dnsmasq)"
    # remove iptables rules
    iptables -D INPUT -i $AP -p udp -m udp --dport 67 -j ACCEPT
    iptables -t nat -D POSTROUTING -s ${SUBNET}.0/24 ! -o $AP -j MASQUERADE
    iptables -D FORWARD -i $AP -s ${IP}/24 -j ACCEPT
    iptables -D FORWARD -i $WIFI -d ${SUBNET}.0/24 -j ACCEPT
    # delete AP interface
    ip link show | grep "${AP}:" && iw $AP del
} > /dev/null 2>&1

CHECKS()
{
    for binary in iw ip iptables hostapd dnsmasq; do

        which $binary >/dev/null && continue
        exit
    done

    # this check is necessary if need to use single channel
    if iw dev $WIFI link | grep -q '^Not connected'
    then
        echo 'Connect to target network first....'
#       exit
    fi
}

TARGET_INFO()
{
    # Here we set vars for hostapd
    iw $WIFI scan | head -n 11 >/data/local/tmp/scn
    FRQ=$(cat /data/local/tmp/scn | grep freq | cut -d : -f 2 | tr -d ' ')
    HSSID=$(cat /data/local/tmp/scn | grep SSID | cut -d : -f 2 | tr -d ' ')
    CH=$(cat /data/local/tmp/scn | grep channel | cut -d l -f 2 | tr -d ' ')
    BSS=$(cat /data/local/tmp/scn|grep BSS|cut -d S -f 3 |cut -d - -f 1|tr -d ' '|cut -c 1-17)
    SIGNL=$(cat /data/local/tmp/scn|grep signal| cut -d : -f 2|tr -d ' ')
}

SETHW()
{
    if  [ "$CH" -lt 14 ]; then
        HW=g
    else
        HW=a
    fi
}

CREATE_AP()
{
    if ! iw dev $WIFI interface add $AP type __ap
    then
        echo "Couldn't create AP."  # :(
        exit
    fi
}

ADD_IP_ROUTE()
{
    # activate the interface and add IP
    ip link set up dev $AP
    ip addr add ${IP}/24 broadcast ${SUBNET}.255 dev $AP

    # routing table 97 needs to be put necessarily on Android
    # because in main table, route for $WIFI takes priority (ip route show)
    # and all traffic goes there ignoring $AP
    ip route add ${SUBNET}.0/24 dev $AP table 97
}


HOSTAPD_CONFIG()
{
    # hostapd configuration
    if [ -e $DIR/hostapd/hostapd_mnet_a.conf ]; then
        rm $DIR/hostapd/hostapd_mnet_a.conf
    fi
	cat <<-EOF >$DIR/hostapd/hostapd_mnet_a.conf
	ssid=$SSID
	interface=$AP
	driver=nl80211
	channel=0
	acs_exclude_dfs=1
	ieee80211n=1
	ieee80211ac=1
	hw_mode=$HW
	ht_capab=[HT40+]
	vht_oper_chwidth=1
	ignore_broadcast_ssid=0
	wowlan_triggers=any
	wpa=2
	rsn_pairwise=CCMP
	wpa_passphrase=$PASSPHRASE
	EOF

    # hostapd configuration
    if [ -e $DIR/hostapd/hostapd_mnet_g.conf ]; then
        rm $DIR/hostapd/hostapd_mnet_g.conf
    fi
	cat <<-EOF >$DIR/hostapd/hostapd_mnet_g.conf
	ssid=$SSID
	interface=$AP
	driver=nl80211
	channel=0
	acs_exclude_dfs=1
	ieee80211n=1
	ieee80211ac=1
	hw_mode=$HW
	ignore_broadcast_ssid=0
	wowlan_triggers=any
	wpa=2
	rsn_pairwise=CCMP
	wpa_passphrase=$PASSPHRASE
	EOF

}


INTERNET_SHARE()
{
    # allow IP forwarding
    echo 1 >/proc/sys/net/ipv4/ip_forward
    # route and allow forwrding through firewall
    iptables -t nat -I POSTROUTING -s ${SUBNET}.0/24 ! -o $AP -j MASQUERADE
    iptables -I FORWARD -i $AP -s ${IP}/24 -j ACCEPT
    iptables -I FORWARD -i $WIFI -d ${SUBNET}.0/24 -j ACCEPT
}


DHCP_SERVER()
{
    # configuration
    if [ -e $DIR/dnsmasq.conf ]; then
       rm $DIR/dnsmasq.conf
    fi

    cat <<-EOF >$DIR/dnsmasq.conf
	# we dont want DNS server, only DHCP
	port=0
	# only listen on AP interface
	interface=$AP
	listen-address=$IP
	#bind-interfaces
	# range of IPs to make available to wlan devices andwhen to renew IP
	dhcp-range=${SUBNET}.2,${SUBNET}.254,24h
	# where to save leases
	dhcp-leasefile=$DIR/dnsmasq.leases
	# set default gateway
	dhcp-option-force=option:router,$IP
	# add OpenDNS servers for DNS lookup to announce
	dhcp-option-force=option:dns-server,1.1.1.1,1.0.0.1
	dhcp-option-force=option:mtu,1500
	# respond to a client who is requesting from a different IP broadcast subnet
	# or requesting an out of range / occupied IP
	# or requesting an IP from expired lease of previous sessions
	# or obtained from some other server which is offline now
	dhcp-authoritative
	# don't look for any hosts file and resolv file
	no-hosts
	no-resolv
	EOF

    # open listening port
    iptables -I INPUT -i $AP -p udp -m udp --dport 67 -j ACCEPT

    # start dhcp server
    dnsmasq -x $DIR/dnsmasq.pid -C $DIR/dnsmasq.conf &
}



if [ "$1" = down ]; then
    DOWN || true
    exit
fi

if [ "$1" = arp ]; then
    cat /proc/net/arp|grep -e Device -e $AP
    exit
fi



[ "$1" = up ] || USAGE
# basic check
CHECKS
# stop running instances
DOWN || true
# scan info from current connection
TARGET_INFO
# set band with target
SETHW
# create virtual wireless interface
CREATE_AP
# configre newly created interface
ADD_IP_ROUTE
# configure acces point daemon
HOSTAPD_CONFIG
# start hostapd
hostapd -d -g$DIR/hostapd/ctrl/$AP  $DIR/hostapd/hostapd_mnet_$HW.conf &
# share internet
INTERNET_SHARE
# run a dhcp server to assign IP's dynamically
# otherwise assign a static IP to connected device in subnet range (2 to 254)
DHCP_SERVER


    if [ "$HW" = "g"   ]; then
    BND=2.4GHz
        else
    BND=5GHz
    fi

BATS=$(cat /sys/class/power_supply/battery/status)

if [ "$BATS" = "Charging" ]; then
    BST='\e[01;32m+\e[0m'
else
    BST='\e[01;31m-\e[0m'
fi

logcat -c;logcat -d -C |grep -e hostapd -e dnsmasq -e wpa -e $AP -e wlan -e nl80211 -e channel
echo -e ' '
echo -e '\e[01;30m====================================================================================\e[0m'
echo -e '\e[01;36mmnet softAP\e[0m''                          '\|'\e[0;32mBATTERY\e[0m': $BST'\e[1;33m'$(acpi |cut -d : -f 2 |tr -d ' ')'\e[0m' \| FREQ:'\e[01;36m'$FRQ'\e[0m' \| CH:'\e[01;36m'$CH'\e[0m' \| BAND:'\e[01;36m'$BND'\e[0m'
echo -e '\e[01;30m====================================================================================\e[0m'
echo -e '\e[01;32mHOST NET\e[0m''               '\| '\e[01;32m'$HSSID'\e[0m' \| $BSS \| $SIGNL \| '\e[1;35m'"$(curl -s icanhazip.com)"'\e[0m'
echo -e '\e[01;36msoftAP \e[0m''                                   '\| '\e[01;36m'$SSID'\e[0m' \| "$(ifconfig "$AP" |head -n 1 |cut -d H -f 2|cut -c 7-24|tr -d ' ')" \| '\e[1;35m'"$(ifconfig "$WIFI"|head -n 2|tail -n 1|cut -d : -f 2 |cut -d B -f 1|cut -d\( -f 2 |tr -d ' ')"'\e[0m'
echo -e '\e[01;30m====================================================================================\e[0m'
